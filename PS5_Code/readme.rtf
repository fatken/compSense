{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh14580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs48 \cf0 HW5_Code package.\
Folders: \
	- Data: three gray images.\
	- Recon: 4 m-functions implementing the reconstruction algorithms OMP, SP, GPSR, and ALM.\
	- Utils: wavelet package. Note that if you're using Mac, Linux or Win32, you need to compile the c files in src subfolder. Run compile.m. You can also choose to use other wavelet packages.\
Files:\
	- psnr.m: m-function used to compute psnr between the recovered image and the original image.\
	- main.m: script file which set up Compressed Sensing for Images. The imported image is divided into 8-by-8 patched (or blocks). Each patch is vectorized into a column vector, named patch in the m-file, which is then used as the input vector x in the linear system y = Ax shown in class. Note that in this set up, we measure the input vector in the frequency domain. \
		+ mdwt(patch, h, L): discrete wavelet transform of the vector patch which transforms the signal (patch) in the space domain to the wavelet domain. \
		+ midwt(alpha, h, L): inverse discrete wavelet transform of the coefficient vector alpha which transforms the wavelet coefficient vector to the signal in the space domain.\
	The reconstructed patches are then regroup to produce the recovered image.}